[
  {
    "DataRow": "0",
    "OriginalUrl": "http://myserver",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "80",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://myserver",
    "Note": "Default port 80"
  },
  {
    "DataRow": "1",
    "OriginalUrl": "https://myserver/",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "https",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "443",
    "Path": "/",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "https",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "/",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "https://myserver/",
    "Note": "Port is not recreated in the ToString() since 443 is the default port for the schema"
  },
  {
    "DataRow": "2",
    "OriginalUrl": "https://myserver:443/",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "https",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "443",
    "Path": "/",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "https",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "/",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "https://myserver/",
    "Note": "Port is not recreated in the ToString() since 443 is the default port for the schema"
  },
  {
    "DataRow": "3",
    "OriginalUrl": "telnet://myserver",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "telnet",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "23",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "telnet",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "telnet://myserver",
    "Note": ""
  },
  {
    "DataRow": "4",
    "OriginalUrl": "ntp://myserver",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "ntp",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "123",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "ntp",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "ntp://myserver",
    "Note": ""
  },
  {
    "DataRow": "5",
    "OriginalUrl": "beany://myserver",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "no default port number is registered for this scheme. Must be provided explicitly.",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "6",
    "OriginalUrl": "Beany://myserver:0",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "port number not in range (1 <= port <= 65535)",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "7",
    "OriginalUrl": "Beany://myserver:65536",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "port number not in range (1 <= port <= 65535)",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "8",
    "OriginalUrl": "beany://myserver:999",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "beany",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "999",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "beany",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "999",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "beany://myserver:999",
    "Note": ""
  },
  {
    "DataRow": "9",
    "OriginalUrl": "http://",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "missing hostname",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "10",
    "OriginalUrl": "http://:/",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "missing hostname",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "11",
    "OriginalUrl": "http://*",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "80",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://*",
    "Note": ""
  },
  {
    "DataRow": "12",
    "OriginalUrl": "http://*/",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "80",
    "Path": "/",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "/",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://*/",
    "Note": ""
  },
  {
    "DataRow": "13",
    "OriginalUrl": "http://*:8095",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "8095",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "8095",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://*:8095",
    "Note": ""
  },
  {
    "DataRow": "14",
    "OriginalUrl": "http://*:A",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "port number is not an integer",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "15",
    "OriginalUrl": "http://*:%31000",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "1000",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "1000",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://*:1000",
    "Note": "encoded valid port number (1000)"
  },
  {
    "DataRow": "16",
    "OriginalUrl": "http://*:3%61",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "port number is not an integer",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": "encoded invalid port number (3a)"
  },
  {
    "DataRow": "17",
    "OriginalUrl": "http://*:8095/",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "8095",
    "Path": "/",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "8095",
    "UrlDecodedPath": "/",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://*:8095/",
    "Note": ""
  },
  {
    "DataRow": "18",
    "OriginalUrl": "http://*:8095/?#",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "8095",
    "Path": "/",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "8095",
    "UrlDecodedPath": "/",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://*:8095/",
    "Note": ""
  },
  {
    "DataRow": "19",
    "OriginalUrl": "http://*:8095?#",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "8095",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "8095",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "http://*:8095",
    "Note": ""
  },
  {
    "DataRow": "20",
    "OriginalUrl": "http://*:8095/#?",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "fragment section appears before query section. Is something not URL-encoded.",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "21",
    "OriginalUrl": "http://*:8095#?",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "fragment section appears before query section. Is something not URL-encoded.",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "22",
    "OriginalUrl": "http://*:8095?x#Y",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "8095",
    "Path": "",
    "Query": "x",
    "Fragment": "Y",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "8095",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "x",
    "UrlDecodedFragment": "Y",
    "AsString": "http://*:8095?x#Y",
    "Note": ""
  },
  {
    "DataRow": "23",
    "OriginalUrl": "http://*:8095#Y?x",
    "ThrowsException": "UriFormatException",
    "ExceptionContains": "fragment section appears before query section. Is something not URL-encoded.",
    "Scheme": "n/a",
    "User": "n/a",
    "Password": "n/a",
    "Host": "n/a",
    "Port": "n/a",
    "Path": "n/a",
    "Query": "n/a",
    "Fragment": "n/a",
    "UrlDecodedScheme": "n/a",
    "UrlDecodedUser": "n/a",
    "UrlDecodedPassword": "n/a",
    "UrlDecodedHost": "n/a",
    "UrlDecodedPort": "n/a",
    "UrlDecodedPath": "n/a",
    "UrlDecodedQuery": "n/a",
    "UrlDecodedFragment": "n/a",
    "AsString": "**EXCEPTION",
    "Note": ""
  },
  {
    "DataRow": "24",
    "OriginalUrl": "http://*:8095?%78#%59",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "8095",
    "Path": "",
    "Query": "%78",
    "Fragment": "%59",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "8095",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "x",
    "UrlDecodedFragment": "Y",
    "AsString": "http://*:8095?%78#%59",
    "Note": ""
  },
  {
    "DataRow": "25",
    "OriginalUrl": "http://*:8095/x?/#/",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "http",
    "User": "",
    "Password": "",
    "Host": "*",
    "Port": "8095",
    "Path": "/x",
    "Query": "/",
    "Fragment": "/",
    "UrlDecodedScheme": "http",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "*",
    "UrlDecodedPort": "8095",
    "UrlDecodedPath": "/x",
    "UrlDecodedQuery": "/",
    "UrlDecodedFragment": "/",
    "AsString": "http://*:8095/x?/#/",
    "Note": "unencoded forward-slash in query or fragment is ok."
  },
  {
    "DataRow": "26",
    "OriginalUrl": "W%41ldo://Kimbo%3aTron@www.maced%30n.tv:8044/x/y/%7A/?y=42&en%61ble#%3f/",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "W%41ld0",
    "User": "Kimbo%3aTron",
    "Password": "",
    "Host": "www.maced%30n.tv",
    "Port": "8044",
    "Path": "/x/y/%7A/",
    "Query": "y=42&en%61ble",
    "Fragment": "%3f/",
    "UrlDecodedScheme": "WAldo",
    "UrlDecodedUser": "Kimbo:Tron",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "www.maced0n.tv",
    "UrlDecodedPort": "8044",
    "UrlDecodedPath": "/x/y/z/",
    "UrlDecodedQuery": "y=42&enable",
    "UrlDecodedFragment": "?/",
    "AsString": "WAldo://Kimbo%3aTron@www.maced0n.tv:8044/x/y/%7A/?y=42&en%61ble#%3f/",
    "Note": "About as complex as it can get.  User name only."
  },
  {
    "DataRow": "27",
    "OriginalUrl": "W%61ldo://Kimbo%3aTron:Lucky5%40@www.maced%30n.tv:8044/x/y/{placeholder}?y=42&en%61ble%26it#%3f/",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "W%61ld0",
    "User": "Kimbo%3aTron",
    "Password": "Lucky5%40",
    "Host": "www.maced%30n.tv",
    "Port": "8044",
    "Path": "/x/y/{placeholder}",
    "Query": "y=42&en%61ble%26it",
    "Fragment": "%3f/",
    "UrlDecodedScheme": "Waldo",
    "UrlDecodedUser": "Kimbo:Tron",
    "UrlDecodedPassword": "Lucky5@",
    "UrlDecodedHost": "www.maced0n.tv",
    "UrlDecodedPort": "8044",
    "UrlDecodedPath": "/x/y/{placeholder}",
    "UrlDecodedQuery": "y=42&enable&it",
    "UrlDecodedFragment": "?/",
    "AsString": "Waldo://Kimbo%3aTron:Lucky5%40@www.maced0n.tv:8044/x/y/{placeholder}?y=42&en%61ble%26it#%3f/",
    "Note": "About as complex as it can get.  User name and password. Allows placeholder in the path for RestAPI patterns."
  },
  {
    "DataRow": "28",
    "OriginalUrl": "ftp://user:pass@myserver:8202/.",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "ftp",
    "User": "user",
    "Password": "pass",
    "Host": "myserver",
    "Port": "8202",
    "Path": "/.",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "ftp",
    "UrlDecodedUser": "user",
    "UrlDecodedPassword": "pass",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "8202",
    "UrlDecodedPath": "/.",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "ftp://user:pass@myserver:8202/.",
    "Note": "Validates proper parsing of port and user:password combination."
  },
  {
    "DataRow": "29",
    "OriginalUrl": "ftp://myserver",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "ftp",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "21",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "ftp",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "ftp://myserver",
    "Note": "Default port test"
  },
  {
    "DataRow": "30",
    "OriginalUrl": "ftps://myserver",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "ftps",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "990",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "ftps",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "ftps://myserver",
    "Note": "Default port test"
  },
  {
    "DataRow": "31",
    "OriginalUrl": "ftpes://myserver",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "ftpes",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "21",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "ftpes",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "ftpes://myserver",
    "Note": "Default port test"
  },
  {
    "DataRow": "32",
    "OriginalUrl": "sftp://myserver",
    "ThrowsException": "",
    "ExceptionContains": "",
    "Scheme": "sftp",
    "User": "",
    "Password": "",
    "Host": "myserver",
    "Port": "22",
    "Path": "",
    "Query": "",
    "Fragment": "",
    "UrlDecodedScheme": "sftp",
    "UrlDecodedUser": "",
    "UrlDecodedPassword": "",
    "UrlDecodedHost": "myserver",
    "UrlDecodedPort": "",
    "UrlDecodedPath": "",
    "UrlDecodedQuery": "",
    "UrlDecodedFragment": "",
    "AsString": "sftp://myserver",
    "Note": "Default port test"
  }
]