[
  {
    "DataRow": "0",
    "Summary": "Number, by count, positive step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Count",
    "StartValue": 0.0,
    "StepValue": 1.0,
    "CountValue": 15,
    "EndValue": 15.0,
    "EndEval": "Exclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 15
  },
  {
    "DataRow": "1",
    "Summary": "Number, by count, positive step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Count",
    "StartValue": 0.0,
    "StepValue": 1.0,
    "CountValue": 15,
    "EndValue": 15.0,
    "EndEval": "Inclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 15
  },
  {
    "DataRow": "2",
    "Summary": "Number, by range (exclusive), positive step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 0.0,
    "StepValue": 1.0,
    "CountValue": 0,
    "EndValue": 15.0,
    "EndEval": "Exclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 15
  },
  {
    "DataRow": "3",
    "Summary": "Number, by range (inclusive), positive step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 0.0,
    "StepValue": 1.0,
    "CountValue": 0,
    "EndValue": 15.0,
    "EndEval": "Inclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 16
  },
  {
    "DataRow": "4",
    "Summary": "Number, by count, negative step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Count",
    "StartValue": 15.0,
    "StepValue": -1.0,
    "CountValue": 15,
    "EndValue": 0.0,
    "EndEval": "Exclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 15
  },
  {
    "DataRow": "5",
    "Summary": "Number, by count, negative step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Count",
    "StartValue": 15.0,
    "StepValue": -1.0,
    "CountValue": 15,
    "EndValue": 0.0,
    "EndEval": "Inclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 15
  },
  {
    "DataRow": "6",
    "Summary": "Number, by range (exclusive), negative step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 15.0,
    "StepValue": -1.0,
    "CountValue": 0,
    "EndValue": 0.0,
    "EndEval": "Exclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 15
  },
  {
    "DataRow": "7",
    "Summary": "Number, by range (inclusive), negative step, valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 15.0,
    "StepValue": -1.0,
    "CountValue": 0,
    "EndValue": 0.0,
    "EndEval": "Inclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 16
  },
  {
    "DataRow": "8",
    "Summary": "Number, by range (exclusive), negative step (non-integer), valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 15.0,
    "StepValue": -1.3,
    "CountValue": 0,
    "EndValue": 12.0,
    "EndEval": "Exclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 2
  },
  {
    "DataRow": "9",
    "Summary": "Number, by range (inclusive), negative step (non-integer), valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 15.0,
    "StepValue": -1.3,
    "CountValue": 0,
    "EndValue": 12.0,
    "EndEval": "Inclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 2
  },
  {
    "DataRow": "10",
    "Summary": "Number, by range (inclusive), positive step (non-integer), positive step invalid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 15.0,
    "StepValue": 1.0,
    "CountValue": 0,
    "EndValue": 0.0,
    "EndEval": "Exclusive",
    "ThrowsException": "System.ArgumentException",
    "ExceptionContains": "is invalid: it should be negative, but is positive.",
    "CountTestValue": 14
  },
  {
    "DataRow": "11",
    "Summary": "Number, by range (inclusive), positive step (non-integer), negative step invalid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 0.0,
    "StepValue": -1.0,
    "CountValue": 0,
    "EndValue": 15.0,
    "EndEval": "Inclusive",
    "ThrowsException": "System.ArgumentException",
    "ExceptionContains": " is invalid: it should be positive, but is negative.",
    "CountTestValue": 15
  },
  {
    "DataRow": "12",
    "Summary": "Number, by range (inclusive), positive step (non-integer), zero step value invalid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 1.0,
    "StepValue": 0.0,
    "CountValue": 0,
    "EndValue": 15.0,
    "EndEval": "Inclusive",
    "ThrowsException": "System.ArgumentException",
    "ExceptionContains": " can not be zero.",
    "CountTestValue": 15
  },
  {
    "DataRow": "13",
    "Summary": "Number, by range (inclusive), positive step (large), large step value valid",
    "HandleAs": "OrdinalNumber",
    "LiteralValues": null,
    "Method": "Range",
    "StartValue": 15.0,
    "StepValue": 2.0,
    "CountValue": 0,
    "EndValue": 16.0,
    "EndEval": "Inclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 1
  },
  {
    "DataRow": "14",
    "Summary": "List 2-items, valid count",
    "HandleAs": "Literal",
    "LiteralValues": [
      "Item1",
      "Item2"
    ],
    "Method": "Count",
    "StartValue": 0.0,
    "StepValue": 0.0,
    "CountValue": 0,
    "EndValue": 0.0,
    "EndEval": "Inclusive",
    "ThrowsException": "",
    "ExceptionContains": "",
    "CountTestValue": 2
  }
]